<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppName" xml:space="preserve">
    <value>IoT Simulator</value>
  </data>
  <data name="Common_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Common_Connect" xml:space="preserve">
    <value>Connect</value>
  </data>
  <data name="Common_Connected" xml:space="preserve">
    <value>Connected</value>
  </data>
  <data name="Common_Disconnect" xml:space="preserve">
    <value>Disconnect</value>
  </data>
  <data name="Common_EmailAddress" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="Common_EndPoint" xml:space="preserve">
    <value>End Point</value>
  </data>
  <data name="Common_GetStarted" xml:space="preserve">
    <value>Get Started</value>
  </data>
  <data name="Common_KeyInUse" xml:space="preserve">
    <value>This Key is already in use, please select a different Key.</value>
  </data>
  <data name="Common_Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Common_Messages" xml:space="preserve">
    <value>Messages</value>
  </data>
  <data name="Common_OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Common_Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Common_Port" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="Common_Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="Common_Transport" xml:space="preserve">
    <value>Transport</value>
  </data>
  <data name="DynamicAttr_Title" xml:space="preserve">
    <value>Dynamic Attributes</value>
  </data>
  <data name="MessageEditor_Title" xml:space="preserve">
    <value>Message Editor</value>
  </data>
  <data name="MessageHeader_Title" xml:space="preserve">
    <value>Message Header</value>
  </data>
  <data name="PasswordEntry_PasswordOrAccessKey" xml:space="preserve">
    <value>Please enter the password or access key to connect to this server side resource.</value>
  </data>
  <data name="PasswordEntry_PasswordOrAccessKey_wm" xml:space="preserve">
    <value>-password or access key-</value>
  </data>
  <data name="PasswordEntry_Required" xml:space="preserve">
    <value>* Required</value>
  </data>
  <data name="PasswordEntry_Title" xml:space="preserve">
    <value>Credentials Entry</value>
  </data>
  <data name="SecureStorage_ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="SecureStorage_ConfirmPassword_wm" xml:space="preserve">
    <value>-confirm the password-</value>
  </data>
  <data name="SecureStorage_EnterPassword" xml:space="preserve">
    <value>Passwords and Access Keys are stored on the device in password protected secure storage

No passwords are ever sent to our servers unless you chose to store credentials in the cloud.

Please enter the password you created to access your secure storage.</value>
  </data>
  <data name="SecureStorage_Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="SecureStorage_Password_wm" xml:space="preserve">
    <value>-enter a password-</value>
  </data>
  <data name="SecureStorage_SetPasswordHelp" xml:space="preserve">
    <value>Your passwords and access keys for accessing resources with your  simulators are stored securely on your device.

You will need to create a password to secure simulator passwords and access keys.  

If you forget your password you will lose access to any stored simulator passwords or access keys.</value>
  </data>
  <data name="SecureStorage_UnlockStorage" xml:space="preserve">
    <value>Unlock Storage</value>
  </data>
  <data name="SecureStore_ResetPassword" xml:space="preserve">
    <value>Reset Password</value>
  </data>
  <data name="SendMessage_Apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="SendMessage_DynamicAttributes" xml:space="preserve">
    <value>Dynamic Attributes</value>
  </data>
  <data name="SendMessage_Received" xml:space="preserve">
    <value>Received Content</value>
  </data>
  <data name="SendMessage_Sent" xml:space="preserve">
    <value>Sent</value>
  </data>
  <data name="SendMessage_Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="SendMessage_Title" xml:space="preserve">
    <value>Message Sender</value>
  </data>
  <data name="SetStoragePassword_Title" xml:space="preserve">
    <value>Secure Storage</value>
  </data>
  <data name="SimulatorEditor_Title" xml:space="preserve">
    <value>Simulator Editor</value>
  </data>
  <data name="SimulatorNetworks_Title" xml:space="preserve">
    <value>Simulator Networks</value>
  </data>
  <data name="SimulatorNetwork_Title" xml:space="preserve">
    <value>Simulator Network</value>
  </data>
  <data name="Simulator_ConnectionStatus" xml:space="preserve">
    <value>Connection Status</value>
  </data>
  <data name="Simulator_MessageTemplates" xml:space="preserve">
    <value>Message Templates</value>
  </data>
  <data name="Simulator_MsgId" xml:space="preserve">
    <value>MsgId: </value>
  </data>
  <data name="Simulator_ReceivedMessages" xml:space="preserve">
    <value>Received Messages</value>
  </data>
  <data name="Simulator_SentMessageStatus" xml:space="preserve">
    <value>Send Message Status</value>
  </data>
  <data name="Simulator_ShowMessageTemplates" xml:space="preserve">
    <value>Message Templates</value>
  </data>
  <data name="Simulator_ShowReceivedMessages" xml:space="preserve">
    <value>Received Messages</value>
  </data>
  <data name="Simulator_Title" xml:space="preserve">
    <value>Simulator</value>
  </data>
  <data name="UnlockStorage_Title" xml:space="preserve">
    <value>Unlock Secure Storage</value>
  </data>
  <data name="Welcome_Title" xml:space="preserve">
    <value>Welcome - IoT Simulator</value>
  </data>
  <data name="SimulatorInstance_Title" xml:space="preserve">
    <value>Simulator Instance</value>
  </data>
  <data name="AttributePicker_Title" xml:space="preserve">
    <value>Select Attribute</value>
  </data>
  <data name="MessageAttribute_Title" xml:space="preserve">
    <value>Message Attribute</value>
  </data>
  <data name="SimulatorPicker_Title" xml:space="preserve">
    <value>Select Simulator</value>
  </data>
  <data name="TransmissionPlan_Title" xml:space="preserve">
    <value>Transmittion Plan</value>
  </data>
  <data name="MessagePicker_Title" xml:space="preserve">
    <value>Select a Message</value>
  </data>
  <data name="SimulatorStatePicker_Title" xml:space="preserve">
    <value>Select Simulator State</value>
  </data>
  <data name="SimulatorState_Title" xml:space="preserve">
    <value>Simulator State</value>
  </data>
</root>